# config that builds the env for the table ur5 experiment
run:
  load_model: False  
  model_path: ""  
  train:
    num_envs : 20
    timesteps: 15000000 
    save_freq : 25000
    save_folder: "./models/weights"
    save_name: "PPO_rgbd_framestacking_randomobstacle_big"
    recurrent: False
    ppo_steps: 100  
    batch_size: 100
    gamma: 0.9930399
    tensorboard_folder: "./models/tensorboard_logs"
    custom_policy:
      use: "framestack"
      cnn_dims: [8,8,4]
      features_dim: 24
      activation_function: "ReLU"  
      layers:
        - value_function:
          - 256
          - 128
          - 64
        - policy_function:
          - 256
          - 128
          - 64
          - 16   
      lstm:
        lstm_hidden_size: 256
        n_lstm_layers: 2
        shared_lstm: False
        enable_critic_lstm: False

  eval:
    max_episodes: -1  
    logging: 1  
    display_delay: 0.00416666666 

env:
  max_steps_per_episode: 100  
  use_physics_sim: True  # strictly speaking the original code had this at False
  physics_steps_per_env_step: 1
  sim_step: 0.00416666666  
  stat_buffer_size: 25  
  normalize_observations: False
  normalize_rewards: False
  display_extra: True
  robots:
    - type: "UR5" 
      config:
        name: "ur5_1"
        base_position: [0, 0, 0.1]
        base_orientation: [0, 0, 0]
        resting_angles: [-90, -45, -45, -135, -90, 0]
        control_mode: 2
        xyz_delta: 0.005
        rpy_delta: 0.005
      sensors:
        # - type: "LidarSensorUR5"
        #   config:
        #     update_steps: 1
        #     add_to_observation_space: True
        #     add_to_logging: True
        #     indicator_buckets: 6
        #     ray_start: 0
        #     ray_end: 0.3
        #     ray_setup:
        #       ee_forward: [1, 1]
        #       wrist3_circle: [10, 10]
        #       wrist2_circle: [10, 10]
        #       wrist1_circle: [10, 10]
        #       upper_arm: [10, 10]
        #     render: False
        #     indicator: True
        - type: "FrameStackingCamera"
          config:
            name: "framestacking"
            position: [0,1.2,0.5]
            camera_args: 
              type: 'rgbd'
              width: 64
              height: 128
            n_frames: 5
      goal:
        type: "PositionCollision"
        config:
          add_to_logging: True
          continue_after_success: True
          reward_success: 20
          reward_collision: -10
          reward_distance_mult: -0.01
          dist_threshold_start: 0.4
          dist_threshold_end : 0.01
          dist_threshold_increment_start: 0.01
          dist_threshold_increment_end: 0.001
          dist_threshold_overwrite: "None"
      

  world:
    type: "RandomObstacle"
    config:
      workspace_boundaries: [-0.4, 0.4, 0.3, 0.7, 0.2, 0.5]
      # type specific settings
      # int, number of static obstacles
      num_static_obstacles: 3
      # int, number of moving obstacles
      num_moving_obstacles: 1
      # floats, measurements of the three dimensions for random box obstacles
      # format: widthmin, widthmax, lengthmin, lengthmax, heightmin, heightmax
      # box_measurements: [0.025, 0.075, 0.025, 0.075, 0.00075, 0.00125]
      # floats, size of the random radii of sphere obstacles, format: rmin, rmax
      sphere_measurements: [0.005, 0.02]
      # floats, bounds for the random velocities of the moving obstacles, format: vmin, vmax
      moving_obstacles_vels: [0.5, 2]
      # lists of floats, directions for the moving obstacles, must either be the same length as num_moving_obstacles or empty (in which case directions will be generated randomly)
      moving_obstacles_directions: []
      # floats, bounds for the random trajectory lengths of the moving obstacles, format: tmin, tmax
      moving_obstacles_trajectory_length: [0.05, 0.75]